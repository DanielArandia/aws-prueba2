name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1      

      - name: Add SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_KEY }}  # Clave privada SSH
          known_hosts: ${{ secrets.EC2_HOST }}  # IP de la instancia EC2

      - name: Update Flask application on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -v -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'ENDSSH'
            # Cambiar al directorio del repositorio
            cd /home/ubuntu/aws-prueba2

            
            # Detener la aplicación Flask (por ejemplo, si se ejecuta en segundo plano o con nohup)
            # Esto puede variar dependiendo de cómo se esté ejecutando la aplicación
            pkill -f 'flask run' || echo "Flask no estaba corriendo"
            
            # Hacer pull del repositorio
            git pull origin master

            source env/bin/activate
            # Volver a ejecutar la aplicación Flask
            flask --app hello run --host=0.0.0.0 &
          ENDSSH

      - name: check dir
        run: aws s3 ls
